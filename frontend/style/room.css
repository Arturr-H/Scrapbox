


main{
	grid-template-columns: 0.45fr 1.55fr 1fr !important; 
  	grid-template-rows: 0.3fr 0.9fr 1fr !important; 
}

.player-list{
	list-style: none;
	margin: 0; padding: 0;
	display: flex;
	flex-direction: column;
	gap: calc(1vmax * var(--UI-scale));
	overflow-y: scroll;
	padding: calc(1vmax * var(--UI-scale)) 0;

	mask-image: linear-gradient(to bottom, transparent,black calc(1vmax * var(--UI-scale)), black calc(100% - calc(1vmax * var(--UI-scale))), transparent), linear-gradient(black, black);
	mask-size: 100%, 0px 100%;
	mask-position: 0 0, 100% 0;
	mask-repeat: no-repeat, no-repeat;
}.player{
	background-color: var(--border-color);
	border-radius: 5px;

	display: flex;
	align-items: center;
	box-sizing: border-box;
	padding: calc(.2vmax * var(--UI-scale)) calc(.5vmax * var(--UI-scale));
	gap: calc(.5vmax * var(--UI-scale));
	
}.player img{
	border-radius: 50%;
	height: calc(2.2vmax * var(--UI-scale)); width: calc(2.2vmax * var(--UI-scale));
}.player p{
	font-size: calc(1vmax * var(--UI-scale));
}


header{
	grid-area: Header;

	/* background-color: var(--nav-bg); */
	/* border-bottom: 2px solid var(--border-color); */

	position: relative;


	display: flex;
	align-items: center;
	justify-content: center;
}
.notch{
	width: calc(35vmax * var(--UI-scale));
	height: 100%;
	background: var(--nav-bg);
	background-size: cover !important;
	border: 2px solid var(--border-color);
		display: flex;
	align-items: center;
	justify-content: center;
	border-radius: 0 0 1000px 1000px;
}

.code h1{
	position: relative;
	font-size: calc(4vmax * var(--UI-scale));
	font-weight: bold;
	margin: 0; padding: 0 calc(3vmax * var(--UI-scale));
}.code.hide h1:after{
	content: "Hover to show code";
	position: absolute;
	top: 0; left: 0;
	width: 100%; height: 100%;
	background-color: black;
	border-radius: 10px;
	font-size: calc(1.5vmax * var(--UI-scale));
	display: flex;
	pointer-events: none;
	align-items: center;
	justify-content: center;
	color: white;
	transition: background-color .2s ease, color .2s ease;
}.code.hide h1:hover:after{
	background-color: transparent;
	color:transparent
}
.code h1 span{
	margin-left: 1ch;
}



.kick-button{
	margin-left: auto;
	margin-right: .5rem;

	display: inline-block;
	transform: rotate(45deg);

	font-size: 1.5rem;
	font-weight: 100;
	user-select: none;
	cursor: pointer;

	color: rgba(0, 0, 0, 0.2);
}.kick-button:hover{
	color: red;
}.kick-button:active{
	color: rgb(220, 11, 11);
}







/*Room creation and join*/



.main-block-container{
	width: 100%; height: 100%;

	display: flex;
	justify-content: center;
	align-items: center;
}
.box{
	display: flex;
	justify-content: center;
	align-items: center;

	box-sizing: border-box;
	padding: 0vmax 4vmax;
}
.header{
	border-bottom: 2px solid var(--border-color);
} .header h1{
	font-size: calc(2.5vmax * var(--UI-scale));
	font-weight: bold;
	margin: 0; padding: 0;
}
.header.join{ grid-area: Header-J; border-right: 2px solid var(--border-color); }
.header.create{ grid-area: Header-C; }
.body.join{ grid-area: Body-J; border-right: 2px solid var(--border-color); }
.body.create{ grid-area: Body-C; }

.Footer{
	grid-area: Footer;

	display: flex;
	gap: 1vmax;
	
	border-top: 2px solid var(--border-color);
}

.main-block{
	width: 90%;
	height: 80%;

	background: var(--nav-bg);
	border-radius: 1vmax;

	box-sizing: border-box;

	display: grid; 
	grid-template-columns: 1fr 1fr; 
	grid-template-rows: 0.4fr 1.6fr 0.6fr; 
	gap: 0px 0px; 
	grid-template-areas: 
		"Header-J Header-C"
		"Body-J Body-C"
		"Footer Footer"; 

	box-shadow: 0 0 3vmax rgba(0, 0, 0, 0.305);
	overflow: hidden;
}.main-block.simple{
	display: flex;
	flex-direction: column;

	justify-content: flex-start;
	align-items: flex-start;
}


input[type="text"]{
	background-color: var(--bg-def);
	border: .12vmax solid var(--border-color);
	border-radius: .8vmax;
	padding: calc(.8vmax * var(--UI-scale));
	font-size: calc(1vmax * var(--UI-scale));
	width: calc(25vmax * var(--UI-scale));
	height: calc(5vmax * var(--UI-scale));
	box-sizing: border-box;
	margin: 0;
	outline: none;
	font-size: calc(1.8vmax * var(--UI-scale));

	color: rgb(165, 165, 165);
}input[type="text"]:focus{
	border: .125vmax solid rgb(105, 105, 237);
	color: var(--text-color);
}

button{
	background-color: var(--bg-def);
	border: .125vmax solid var(--border-color);
	border-radius: .8vmax;
	padding: calc(.8vmax * var(--UI-scale));
	font-size: calc(1vmax * var(--UI-scale));
	width: calc(25vmax * var(--UI-scale));
	height: calc(5vmax * var(--UI-scale));
	box-sizing: border-box;
	margin: 0;
	outline: none;
	font-size: calc(1.8vmax * var(--UI-scale));
	cursor: pointer;
	color: rgb(165, 165, 165);

	transition: color .2s ease-in-out;

}button:hover{
	color: white;
}



.room-list{

	display: flex;
	flex-direction: column;
	gap: 1vmax;

	box-sizing: border-box;
	padding: 1vmax 0;

	width: 100%;
	height: 100%;
	overflow-y: scroll;

	mask-image: linear-gradient(to bottom, transparent,black calc(1vmax * var(--UI-scale)), black calc(100% - calc(5vmax * var(--UI-scale))), transparent), linear-gradient(black, black);
	mask-size: 100%, 0px 100%;
	mask-position: 0 0, 100% 0;
	mask-repeat: no-repeat, no-repeat;
}.room-list > .room{
	width: 100%;
	height: max-content;
	min-height: max-content;
	
	display: grid;
	grid-template-columns: 9vmax 10vmax 9vmax 2fr;
	gap: calc(1vmax * var(--UI-scale));

	justify-content: center;
	align-items: center;

	/* styling that looks like the button and input[type="text"]*/
	background-color: var(--bg-def);
	border: .12vmax solid var(--border-color);
	border-radius: .8vmax;
	padding: calc(.2vmax * var(--UI-scale)) 2vmax;
	box-sizing: border-box;
	margin: 0;
	outline: none;

	cursor: pointer;
	transition: background-color .1s ease-in-out;
	
}.room-list > .room:hover{
	background-color: var(--bg-hover);
}.room-list > .room > img{
	margin-left: auto;
	display: block;
	cursor: pointer;
}




.lobby-short-id{
	cursor: pointer;

}.lobby-short-id:hover{
	color: black;
}

.notice{
	width: max-content;
	min-width: 10vmax;
	height: 3vmax;
	background: burlywood;

	padding: 0 2vmax;

	position: fixed;
	border-radius: .8vmax;

	left: 50%;
	bottom: 1vmax;
	transform: translateX(-50%);

	box-shadow: 0 0 3vmax rgba(0, 0, 0, 0.305);
	display: flex;
	justify-content: center;
	align-items: center;

	cursor: pointer;
	user-select: none;

	animation: notice-intro .25s ease-in-out forwards;
}
@keyframes notice-intro {
	from{
		bottom: 0vmax;
		transform: translateY(125%) translateX(-50%);
	}to{
		bottom: 1vmax;
		transform: translateY(0%) translateX(-50%);
	}
}


.main-room-section{
	display: flex;
	flex-direction: column;
}